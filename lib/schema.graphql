
union GlobalSearch = Course | Student | Monitor
enum Level{
      principiante
      intermedio
      avanzado
}
interface Person{
     _id: ID!
    name: String!
    email:String!
}
type Student implements Person{
    _id: ID!
    name: String!
    email: String!
    avatar: String
}
type Monitor implements Person{
    _id: ID!
    name: String!
    email: String!
    phone: String
}
type Course{
    _id: ID!
    title: String!
    teacher: String!
    description: String!
    topic: String
    student:[Student]
    level: Level
}

input CourseInput {
   title: String!
   teacher: String
   description: String!
   topic: String,
   level: Level!
}
input CourseEditInput {
   title: String
   teacher: String
   description: String
   topic: String
}
input PersonInput {
   _id: ID
    name: String!
    email:String!
    avatar: String
    phone: String
}
input PersonEditInput {
   _id: ID
    name: String
    email:String
    avatar: String
    phone: String
}
type Mutation {
   "Crear un curso"
       createCourse (input: CourseInput!): Course
    "Editar un curso"
       editCourse (id:ID!, input: CourseEditInput!): Course
    "Crear un persona"
       createPerson (input: PersonInput!): Person
    "Editar un Person"
       editPerson (id:ID!, input: PersonEditInput!): Person

    "Agrega un persona a un curso"
        addPeople( courseID: ID!, personID: ID! ): Course
}

type Query{
    "Devuelve todos los cursos"
    getCourses:[Course]

    "Devuelve un solo curso, el que ud defina"
    getCourse(id:ID!):Course

    "Devuelve todos los estudiantes"
    getPeople:[Person]

    "Devuelve un solo estudiante, el que ud defina"
    getPerson(id:ID!):Person

    "Ejecuta una consulta global"
    seacrhItems(keywboards: String!) : [GlobalSearch]
}